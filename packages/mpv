#!/usr/bin/env bash

u_subheader "mpv"

#-- Config -----------------------------------------------------------------------------------------
local tmp_dir="/tmp"

local tar_gz_source="https://github.com/mpv-player/mpv/archive/v0.21.0.tar.gz"
local tar_gz_path="${tmp_dir}/v0.21.0.tar.gz"
local folder_path="${tmp_dir}/mpv-0.21.0"

#-- Check for existing installation ----------------------------------------------------------------
if command_exists mpv; then
  u_skip "Installing mpv..."
  u_exit_subheader && return
fi

#-- Confirm installation ---------------------------------------------------------------------------
if ! poll_confirm "Install mpv?" true; then
  u_skip "Installing mpv..."
  u_exit_subheader && return
fi

#-- Dependencies -----------------------------------------------------------------------------------
install_build_tools

package_install "python"
package_install "python-docutils"
package_install "rst2pdf"
package_install "mesa-libgbm-devel"
package_install "ffmpeg-devel"
package_install "zlib"
package_install "libass-devel"
package_install "lua-devel"
package_install "clang"
package_install "libsmbclient-devel"
package_install "luajit-devel"
package_install "libbluray-devel"
package_install "libdvdread-devel"
package_install "libdvdnav-devel"
package_install "enca-devel"
package_install "libcdio-paranoia-devel"
package_install "libguess-devel"
package_install "uchardet-devel"
package_install "rubberband-devel"
package_install "lcms2-devel"
package_install "libXScrnSaver-devel"
package_install "libXv-devel"
package_install "libvdpau-devel"
package_install "libva-devel"
package_install "gstreamer1-vaapi"
package_install "libcaca-devel"
package_install "libv4l-devel"
package_install "perl-Math-BigRat"

#-- Install ----------------------------------------------------------------------------------------
cd "$tmp_dir"

function download() {
  u_print "Downloading tarball..."

  if [[ -f "$tar_gz_path" ]]; then
    rm "$tar_gz_path"
  fi

  u_return wget -q "$tar_gz_source"
}
function extract() {
  u_print "Extracting tarball..."

  if [[ -d "$folder_path" ]]; then
    rm -r "$folder_path"
  fi

  u_return tar -zxf "$tar_gz_path"
}
function configure() {
  u_print "Running ./bootstrap.py..."
  u_return show_progress ./bootstrap.py

  u_print "Running ./waf configure..."
  u_return show_progress ./waf configure
}
function build() {
  u_print "Running ./waf build..."
  u_return show_progress ./waf build

}
function install() {
  u_print "Running ./waf install..."
  u_return show_progress sudo ./waf install
}
function cleanup() {
  if [[ -f "$tar_gz_path" ]]; then
    rm "$tar_gz_path"
  fi

  if [[ -d "$folder_path" ]]; then
    rm -r "$folder_path"
  fi
}

download && extract

cd "$folder_path"

configure && build && install && cleanup

u_exit_subheader
