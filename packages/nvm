#!/usr/bin/env bash

subheader "nvm"

#-- Config -----------------------------------------------------------------------------------------
local nvm_dir="$HOME/.nvm"
local nvm_script="${nvm_dir}/nvm.sh"
local nvm_repository="https://github.com/creationix/nvm.git"

local node_version="v7.0.0"

#-- Check for existing installation ----------------------------------------------------------------
if [[ -f "$nvm_script" ]]; then
  source "$nvm_script"
fi

if command_exists nvm; then
  skip "Installing nvm..."
  exit_subheader && return
fi

#-- Confirm installation ---------------------------------------------------------------------------
if ! confirm_default "Install nvm?"; then
  skip "Installing nvm..."
  exit_subheader && return
fi

#-- Install ----------------------------------------------------------------------------------------
log "Downloading nvm..."
git clone "$nvm_repository" "$nvm_dir" || {
  fail
  die "Failed to clone git repository ($nvm_repository)" 27
}
pass

cd "$nvm_dir"

log "Updating nvm..."
git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" origin` || {
  fail
  die "Failed to checkout git repository ($nvm_repository)" 28
}
pass

log "Sourcing nvm..."
source "$nvm_script"
pass

exit_subheader

#-- Install node -----------------------------------------------------------------------------------
subheader "nvm-node"

if ! confirm_default "Install node ${node_version}?"; then
  skip "Installing node..."
  exit_subheader && return
fi

if ! is_default; then
  selection "^Install from binary or source?" \
            "#1" \
            "binary" \
            "source"
else
  set_selection "binary"
fi

log "Installing node..."

# NVM uses unset variables
set +o nounset

case "$SELECTED_VALUE" in
  "binary")
    check_success show_progress nvm install "$node_version"
    ;;
  "source")
    check_success show_progress nvm install -s "$node_version"
    ;;
esac

log "Switching to $node_version..."
check_success nvm use "$node_version"

set -o nounset

exit_subheader
