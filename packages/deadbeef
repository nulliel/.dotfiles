#!/usr/bin/env bash

u_subheader "deadbeef"

#-- Config -----------------------------------------------------------------------------------------
local tmp_dir="/tmp"

local tar_gz_source="https://github.com/Alexey-Yakovenko/deadbeef/archive/0.7.2.tar.gz"
local tar_gz_path="${tmp_dir}/0.7.2.tar.gz"
local folder_path="${tmp_dir}/deadbeef-0.7.2"

#-- Check for existing installation ----------------------------------------------------------------
if command_exists deadbeef; then
  u_skip "Installing deadbeef..."
  u_exit_subheader && return
fi

#-- Confirm installation ---------------------------------------------------------------------------
if ! poll_confirm "Install deadbeef?" true; then
  u_skip "Installing deadbeef..."
  u_exit_subheader && return
fi

#-- Dependencies -----------------------------------------------------------------------------------
install_build_tools

package_install "libtool"
package_install "intltool"
package_install "gettext"
package_install "gettext-devel"

package_install "libsamplerate-devel"
package_install "jansson-devel"
package_install "alsa-lib-devel"
package_install "libvorbis-devel"
package_install "libcurl-devel"
package_install "libogg-devel"
package_install "imlib2-devel"
package_install "libjpeg-turbo-devel"
package_install "libpng-devel"
package_install "libmad-devel"
package_install "mpg123"
package_install "flac-devel"
package_install "wavpack-devel"
package_install "libsndfile-devel"
package_install "libcdio-devel"
package_install "ffmpeg-devel"
package_install "dbus-devel"
package_install "pulseaudio-libs-devel"
package_install "faad2-devel"
package_install "zlib-devel"
package_install "libzip-devel"
package_install "yasm-devel"
package_install "mesa-libGLU-devel"
package_install "libcddb-devel"
package_install "libICE-devel"
package_install "libSM-devel"
package_install "gstreamer-{ffmpeg,plugins-{good,ugly,bad{,-free,-nonfree}}}"
package_install "glib-devel"
package_install "glib2-devel"

#-- Install ----------------------------------------------------------------------------------------
cd "$tmp_dir"

function download() {
  u_print "Downloading tarball..."

  if [[ -f "$tar_gz_path" ]]; then
    rm "$tar_gz_path"
  fi

  u_return wget -q "$tar_gz_source"
}
function extract() {
  u_print "Extracting tarball..."

  if [[ -d "$folder_path" ]]; then
    rm -r "$folder_path"
  fi

  u_return tar -zxf "$tar_gz_path"
}
function configure() {
  u_print "Running ./autogen.sh..."
  u_return show_progress ./autogen.sh

  u_print "Running ./configure..."
  u_return show_progress ./configure
}
function build() {
  u_print "Running make..."
  u_return show_progress make
}
function install() {
  u_print "Running make install..."
  u_return show_progress sudo make install
}
function cleanup() {
  if [[ -f "$tar_gz_path" ]]; then
    rm "$tar_gz_path"
  fi

  if [[ -d "$folder_path" ]]; then
    rm -r "$folder_path"
  fi
}

download && extract

cd "$folder_path"

configure && build && install && cleanup

u_exit_subheader
