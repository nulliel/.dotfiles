#!/usr/bin/env bash

#-- Config -----------------------------------------------------------------------------------------
DOTFILES_DIRECTORY="${HOME}/.dotfiles"
DOTFILES_GIT_REPO="git@github.com:nulliel/dotfiles.git" # EDIT THIS WHEN FORKING

#-- Banner -----------------------------------------------------------------------------------------
clear
printf '\e[1m'
printf '          888          888     .d888 d8b 888                  \n'
printf '          888          888    d88P"  Y8P 888                  \n'
printf '          888          888    888        888                  \n'
printf '      .d88888  .d88b.  888888 888888 888 888  .d88b.  .d8888b \n'
printf '     d88" 888 d88""88b 888    888    888 888 d8P  Y8b 88K     \n'
printf '     888  888 888  888 888    888    888 888 88888888 "Y8888b.\n'
printf '     Y88b 888 Y88..88P Y88b.  888    888 888 Y8b.          X88\n'
printf '      "Y88888  "Y88P"   "Y888 888    888 888  "Y8888   88888P" \e[0m\n\n'

#-- Sourcing helpers -------------------------------------------------------------------------------
source $DOTFILES_DIRECTORY/lib/help
source $DOTFILES_DIRECTORY/lib/utils

#-- Check for root ---------------------------------------------------------------------------------
if [[ "$EUID" -eq 0 ]]; then
    u_error "This script should not be run using sudo or as the root user" >&2
    exit 1
fi

#-- Ensure sudo access -----------------------------------------------------------------------------
sudo -n true >/dev/null 2>&1 || {
    u_error "This script requires the use of sudo without a password" >&2
    exit 1
}

#-- Command parsing --------------------------------------------------------------------------------
if [[ "$1" == "-h"  || "$1" == "--help" ]]; then
    run_help
    exit
fi

for opt in $@
do
    case $opt in
        --defaults)
            INSTALL_DEFAULTS=true
            ;;
        --no-packages)
            NO_PACKAGES=true
            ;;
        --no-sync)
            NO_SYNC=true
            ;;
        -*|--*)
            u_error "Invalid option $opt"
            exit 1
            ;;
    esac
done

#-- Ensure git is installed ------------------------------------------------------------------------
source $DOTFILES_DIRECTORY/lib/git

#-- Sync repository --------------------------------------------------------------------------------
source $DOTFILES_DIRECTORY/bin/sync

#-- Install packages -------------------------------------------------------------------------------
if [[ $NO_PACKAGES ]]; then
    u_print "Skipping package installation"
else
    u_header "Installing packages"

    source $DOTFILES_DIRECTORY/lib/chrome
fi
