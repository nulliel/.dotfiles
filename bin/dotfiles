#!/usr/bin/env bash
# shellcheck disable=SC2034,SC1090

#-- Options ----------------------------------------------------------------------------------------
set -o errtrace    # Inherit error traps
set -o nounset     # Disallow expansion of unset variables

#-- Config -----------------------------------------------------------------------------------------
readonly SCRIPT_NAME="$(basename ${0})"

readonly DOTFILES_DIR="${HOME}/.dotfiles"
readonly DOTFILES_USR="${DOTFILES_DIR}/.usr"
readonly DOTFILES_BUILD="${DOTFILES_DIR}/.build"
readonly DOTFILES_STORE="${DOTFILES_DIR}/.store"

readonly DOTFILES_LOG="${DOTFILES_STORE}/dotfiles.log"
readonly DOTFILES_REMOTE="https://github.com/nulliel/dotfiles.git"

#-- Libraries --------------------------------------------------------------------------------------
source "${DOTFILES_DIR}/lib/internal/utils"             # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-arguments"   # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-build"       #
source "${DOTFILES_DIR}/lib/internal/utils-console"     # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-fs"          # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-header"      # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-interactive" # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-logging"     # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-npm"         #
source "${DOTFILES_DIR}/lib/internal/utils-package"     # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-process"     # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-progress"    # GOOD
source "${DOTFILES_DIR}/lib/internal/utils-system"      # GOOD

#-- Require non root with sudo privileges ----------------------------------------------------------
if [[ "$EUID" -eq 0 ]]; then
  printf "This script should not be run using sudo or as the root user.\n"
  exit
fi

if ! sudo -n true; then
  printf "This script requires the use of sudo.\n"
  exit
fi

if ! commandExists "git"; then
  printf "This script requires git.\n"
  exit
fi

#-- Utils ------------------------------------------------------------------------------------------
showUsage () {
  cat <<EOF
Usage: $SCRIPT_NAME [options]

Options:
    --help        Print this help text
    --no-sync     Skip syncing the git repository

Documentation can be found at https://github.com/nulliel/dotfiles/
EOF
}

#-- Main -------------------------------------------------------------------------------------------
main () {
  trap "trapError" ERR                          # utils-process
  trap "trapExit"  EXIT SIGINT SIGTERM SIGTSTP  # utils-process

  # Disable word wrapping
  tput rmam

  #-- Console redirection --------------------------------------------------------------------------
  redirectOutput

  clear
  console '\e[1m'
  console "          888          888     .d888 d8b 888                  \n"
  console '          888          888    d88P"  Y8P 888                  \n'
  console '          888          888    888        888                  \n'
  console '      .d88888  .d88b.  888888 888888 888 888  .d88b.  .d8888b \n'
  console '     d88" 888 d88""88b 888    888    888 888 d8P  Y8b 88K     \n'
  console '     888  888 888  888 888    888    888 888 88888888 "Y8888b.\n'
  console '     Y88b 888 Y88..88P Y88b.  888    888 888 Y8b.          X88\n'
  console '      "Y88888  "Y88P"   "Y888 888    888 888  "Y8888   88888P" \e[0m\n\n'

  noSync=false # Prevent git synchronization

  parseArguments "no-sync" "noSync"    bool      \
                 "help"    "showUsage" func,exit \
                 "--" "$@"

  #-- Make sure we're in the right directory -------------------------------------------------------
  cdSafe "${DOTFILES_DIR}"

  #-- Create folder structures ---------------------------------------------------------------------
  mkdirSafe "${DOTFILES_USR}"
  mkdirSafe "${DOTFILES_USR}/bin"
  mkdirSafe "${DOTFILES_USR}/etc"
  mkdirSafe "${DOTFILES_USR}/include"
  mkdirSafe "${DOTFILES_USR}/lib"
  mkdirSafe "${DOTFILES_USR}/local"
  mkdirSafe "${DOTFILES_USR}/share"
  mkdirSafe "${DOTFILES_USR}/src"

  mkdirSafe "${DOTFILES_BUILD}"
  mkdirSafe "${DOTFILES_STORE}"

  #-- Acquire the lock -----------------------------------------------------------------------------
  lockfile "${SCRIPT_NAME}"

  #-- Empty the log file ---------------------------------------------------------------------------
  printf "" >"$DOTFILES_LOG"

  #-- Sync repository ------------------------------------------------------------------------------
  source "${DOTFILES_DIR}/lib/internal/sync"

  #-- Install packages -----------------------------------------------------------------------------
  # source "${DOTFILES_DIR}/lib/packages"

  #-- Create links ---------------------------------------------------------------------------------
  source "${DOTFILES_DIR}/lib/links"

  #-- Restart terminal -----------------------------------------------------------------------------
  console --bold --linefeed "Please restart your terminal session for changes to take effect"

  while read -r; do
    :
  done
}

main "$@"
