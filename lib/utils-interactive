#!/usr/bin/env bash

#-- Properties -------------------------------------------------------------------------------------
declare first_selection_run=false
declare SELECTED_VALUE=""

#-- Confirmation -----------------------------------------------------------------------------------
confirm () {
  local confirm_message="[y/N]"

  if [[ "$#" = "1" ]]; then
    confirm_message="$1 $confirm_message"
  fi

  _print_header 1>&3 2>&1

  read -s -p "$confirm_message: " -n 1 1>&3 2>&1
  clear_line

  return $(is_confirmed)
}
confirm_default () {
  local confirm_message="[Y/n]"

  if [[ "$#" = "1" ]]; then
    confirm_message="$1 $confirm_message"
  fi

  _print_header 1>&3 2>&1

  if ! is_default; then
    read -s -p "$confirm_message: " -n 1 1>&3 2>&1
    clear_line

    [[ "$REPLY" = "" ]] && set_confirmed
  else
    set_confirmed
  fi

  return $(is_confirmed)
}

is_confirmed () {
  set +o nounset    # Prevent errors when $REPLY is unset

  if [[ "$REPLY" = "" ]]; then
    unset REPLY
    return 1
  fi

  if [[ "$REPLY" =~ ^[yY]$ ]]; then
    set -o nounset

    unset REPLY
    return 0
  fi

  set -o nounset

  unset REPLY
  return 1
}
set_confirmed () {
  REPLY="y"
}

#-- Selection --------------------------------------------------------------------------------------
_selection_print () {
  local list_id="1"
  local selected_id="$1"
  shift

  if [[ "$first_selection_run" = false ]]; then
    printf "\033[$#A" 1>&3 2>&1
  fi

  first_selection_run=false

  # Update list
  for item in "$@"; do
    [[ "$list_id" = "$selected_id" ]] && printf "\033[96m" 1>&3 2>&1
    consolehl "â€¢ $item"
    [[ "$list_id" = "$selected_id" ]] && printf "\033[0m" 1>&3 2>&1

    list_id="$(($list_id+1))"
  done
}
_selection_clear () {
  printf "\e[$1A" 1>&3 2>&1

    for (( c=1; c<=$1; c++ )); do
        printf "\r\e[K\n" 1>&3 2>&1
    done

    printf "\e[$1A" 1>&3 2>&1
}

selection () {
  local current_selection="1"
  local selection_length="$#"

  first_selection_run=true

  # Print title if exists
  if [[ "${1:0:1}" = '^' ]]; then
    consolel "${1:1}"
    shift
  fi

  # Check for a default paramater
  if [[ "${1:0:1}" = '#' ]]; then
    current_selection="${1:1}"
    selection_length="$(($selection_length-1))"
    shift
  fi

  # Print the initial list
  _selection_print "$current_selection" "$@"

  # Selection mechanism
  while read -rsn1 key; do
    case "$key" in
      $'\x1b')
        read -rsn1 -t 0.1 tmp
        if [[ "$tmp" = '[' ]]; then
          read -rsn1 -t 0.1 tmp
          case "$tmp" in
            "A") # Up arrow
              if [[ "$current_selection" = "1" ]]; then
                current_selection="$selection_length"
              else
                current_selection="$(($current_selection-1))"
              fi
              ;;
            "B") # Down arrow
              if [[ "$current_selection" = "$selection_length" ]]; then
                current_selection="1"
              else
                current_selection="$(($current_selection+1))"
              fi
              ;;
          esac
        fi
        ;;
      "")
        break
        ;;
    esac

    _selection_print "$current_selection" "$@"
  done

  # Cleanup
  _selection_clear "$selection_length"

  # Set the selected value
  SELECTED_VALUE="${!current_selection}"
}

is_selection () {
  [[ "$1" == "$SELECTED_VALUE" ]] && return 0 || return 1
}
set_selection () {
  SELECTED_VALUE="$1"
}
